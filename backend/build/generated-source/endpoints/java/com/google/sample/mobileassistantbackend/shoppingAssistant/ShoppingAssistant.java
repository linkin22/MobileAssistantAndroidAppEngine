/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-10-14 at 13:30:54 UTC 
 * Modify at your own risk.
 */

package com.google.sample.mobileassistantbackend.shoppingAssistant;

/**
 * Service definition for ShoppingAssistant (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ShoppingAssistantRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ShoppingAssistant extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the shoppingAssistant library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://useful-academy-100715.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "shoppingAssistant/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ShoppingAssistant(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ShoppingAssistant(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Checkins collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Checkins.List request = shoppingAssistant.checkins().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Checkins checkins() {
    return new Checkins();
  }

  /**
   * The "checkins" collection of methods.
   */
  public class Checkins {

    /**
     * Create a request for the method "checkins.getCheckIn".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link GetCheckIn#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetCheckIn getCheckIn(java.lang.Long id) throws java.io.IOException {
      GetCheckIn result = new GetCheckIn(id);
      initialize(result);
      return result;
    }

    public class GetCheckIn extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn> {

      private static final String REST_PATH = "checkins/{id}";

      /**
       * Create a request for the method "checkins.getCheckIn".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link GetCheckIn#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetCheckIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetCheckIn(java.lang.Long id) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetCheckIn setAlt(java.lang.String alt) {
        return (GetCheckIn) super.setAlt(alt);
      }

      @Override
      public GetCheckIn setFields(java.lang.String fields) {
        return (GetCheckIn) super.setFields(fields);
      }

      @Override
      public GetCheckIn setKey(java.lang.String key) {
        return (GetCheckIn) super.setKey(key);
      }

      @Override
      public GetCheckIn setOauthToken(java.lang.String oauthToken) {
        return (GetCheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public GetCheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetCheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetCheckIn setQuotaUser(java.lang.String quotaUser) {
        return (GetCheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetCheckIn setUserIp(java.lang.String userIp) {
        return (GetCheckIn) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public GetCheckIn setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public GetCheckIn set(String parameterName, Object value) {
        return (GetCheckIn) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "checkins.insertCheckIn".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link InsertCheckIn#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn}
     * @return the request
     */
    public InsertCheckIn insertCheckIn(com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn content) throws java.io.IOException {
      InsertCheckIn result = new InsertCheckIn(content);
      initialize(result);
      return result;
    }

    public class InsertCheckIn extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn> {

      private static final String REST_PATH = "checkins";

      /**
       * Create a request for the method "checkins.insertCheckIn".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link InsertCheckIn#execute()} method to invoke the remote
       * operation. <p> {@link InsertCheckIn#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn}
       * @since 1.13
       */
      protected InsertCheckIn(com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn content) {
        super(ShoppingAssistant.this, "POST", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn.class);
      }

      @Override
      public InsertCheckIn setAlt(java.lang.String alt) {
        return (InsertCheckIn) super.setAlt(alt);
      }

      @Override
      public InsertCheckIn setFields(java.lang.String fields) {
        return (InsertCheckIn) super.setFields(fields);
      }

      @Override
      public InsertCheckIn setKey(java.lang.String key) {
        return (InsertCheckIn) super.setKey(key);
      }

      @Override
      public InsertCheckIn setOauthToken(java.lang.String oauthToken) {
        return (InsertCheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertCheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertCheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertCheckIn setQuotaUser(java.lang.String quotaUser) {
        return (InsertCheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertCheckIn setUserIp(java.lang.String userIp) {
        return (InsertCheckIn) super.setUserIp(userIp);
      }

      @Override
      public InsertCheckIn set(String parameterName, Object value) {
        return (InsertCheckIn) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "checkins.listCheckIn".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link ListCheckIn#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public ListCheckIn listCheckIn() throws java.io.IOException {
      ListCheckIn result = new ListCheckIn();
      initialize(result);
      return result;
    }

    public class ListCheckIn extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckInCollection> {

      private static final String REST_PATH = "checkins";

      /**
       * Create a request for the method "checkins.listCheckIn".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link ListCheckIn#execute()} method to invoke the remote
       * operation. <p> {@link
       * ListCheckIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected ListCheckIn() {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckInCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListCheckIn setAlt(java.lang.String alt) {
        return (ListCheckIn) super.setAlt(alt);
      }

      @Override
      public ListCheckIn setFields(java.lang.String fields) {
        return (ListCheckIn) super.setFields(fields);
      }

      @Override
      public ListCheckIn setKey(java.lang.String key) {
        return (ListCheckIn) super.setKey(key);
      }

      @Override
      public ListCheckIn setOauthToken(java.lang.String oauthToken) {
        return (ListCheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public ListCheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListCheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListCheckIn setQuotaUser(java.lang.String quotaUser) {
        return (ListCheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListCheckIn setUserIp(java.lang.String userIp) {
        return (ListCheckIn) super.setUserIp(userIp);
      }

      @Override
      public ListCheckIn set(String parameterName, Object value) {
        return (ListCheckIn) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "checkins.removeCheckIn".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link RemoveCheckIn#execute()} method to invoke the remote
     * operation.
     *
     * @param id
     * @return the request
     */
    public RemoveCheckIn removeCheckIn(java.lang.Long id) throws java.io.IOException {
      RemoveCheckIn result = new RemoveCheckIn(id);
      initialize(result);
      return result;
    }

    public class RemoveCheckIn extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "checkins/{id}";

      /**
       * Create a request for the method "checkins.removeCheckIn".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link RemoveCheckIn#execute()} method to invoke the remote
       * operation. <p> {@link RemoveCheckIn#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected RemoveCheckIn(java.lang.Long id) {
        super(ShoppingAssistant.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public RemoveCheckIn setAlt(java.lang.String alt) {
        return (RemoveCheckIn) super.setAlt(alt);
      }

      @Override
      public RemoveCheckIn setFields(java.lang.String fields) {
        return (RemoveCheckIn) super.setFields(fields);
      }

      @Override
      public RemoveCheckIn setKey(java.lang.String key) {
        return (RemoveCheckIn) super.setKey(key);
      }

      @Override
      public RemoveCheckIn setOauthToken(java.lang.String oauthToken) {
        return (RemoveCheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveCheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveCheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveCheckIn setQuotaUser(java.lang.String quotaUser) {
        return (RemoveCheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveCheckIn setUserIp(java.lang.String userIp) {
        return (RemoveCheckIn) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public RemoveCheckIn setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public RemoveCheckIn set(String parameterName, Object value) {
        return (RemoveCheckIn) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "checkins.updateCheckIn".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link UpdateCheckIn#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn}
     * @return the request
     */
    public UpdateCheckIn updateCheckIn(com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn content) throws java.io.IOException {
      UpdateCheckIn result = new UpdateCheckIn(content);
      initialize(result);
      return result;
    }

    public class UpdateCheckIn extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn> {

      private static final String REST_PATH = "checkins";

      /**
       * Create a request for the method "checkins.updateCheckIn".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link UpdateCheckIn#execute()} method to invoke the remote
       * operation. <p> {@link UpdateCheckIn#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn}
       * @since 1.13
       */
      protected UpdateCheckIn(com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn content) {
        super(ShoppingAssistant.this, "PUT", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.CheckIn.class);
      }

      @Override
      public UpdateCheckIn setAlt(java.lang.String alt) {
        return (UpdateCheckIn) super.setAlt(alt);
      }

      @Override
      public UpdateCheckIn setFields(java.lang.String fields) {
        return (UpdateCheckIn) super.setFields(fields);
      }

      @Override
      public UpdateCheckIn setKey(java.lang.String key) {
        return (UpdateCheckIn) super.setKey(key);
      }

      @Override
      public UpdateCheckIn setOauthToken(java.lang.String oauthToken) {
        return (UpdateCheckIn) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateCheckIn setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateCheckIn) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateCheckIn setQuotaUser(java.lang.String quotaUser) {
        return (UpdateCheckIn) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateCheckIn setUserIp(java.lang.String userIp) {
        return (UpdateCheckIn) super.setUserIp(userIp);
      }

      @Override
      public UpdateCheckIn set(String parameterName, Object value) {
        return (UpdateCheckIn) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Messaging collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Messaging.List request = shoppingAssistant.messaging().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Messaging messaging() {
    return new Messaging();
  }

  /**
   * The "messaging" collection of methods.
   */
  public class Messaging {

    /**
     * Create a request for the method "messaging.sendMessage".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.JsonMap}
     * @return the request
     */
    public SendMessage sendMessage(com.google.sample.mobileassistantbackend.shoppingAssistant.model.JsonMap content) throws java.io.IOException {
      SendMessage result = new SendMessage(content);
      initialize(result);
      return result;
    }

    public class SendMessage extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "messaging";

      /**
       * Create a request for the method "messaging.sendMessage".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link SendMessage#execute()} method to invoke the remote
       * operation. <p> {@link
       * SendMessage#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.JsonMap}
       * @since 1.13
       */
      protected SendMessage(com.google.sample.mobileassistantbackend.shoppingAssistant.model.JsonMap content) {
        super(ShoppingAssistant.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public SendMessage setAlt(java.lang.String alt) {
        return (SendMessage) super.setAlt(alt);
      }

      @Override
      public SendMessage setFields(java.lang.String fields) {
        return (SendMessage) super.setFields(fields);
      }

      @Override
      public SendMessage setKey(java.lang.String key) {
        return (SendMessage) super.setKey(key);
      }

      @Override
      public SendMessage setOauthToken(java.lang.String oauthToken) {
        return (SendMessage) super.setOauthToken(oauthToken);
      }

      @Override
      public SendMessage setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendMessage) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendMessage setQuotaUser(java.lang.String quotaUser) {
        return (SendMessage) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendMessage setUserIp(java.lang.String userIp) {
        return (SendMessage) super.setUserIp(userIp);
      }

      @Override
      public SendMessage set(String parameterName, Object value) {
        return (SendMessage) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Offers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Offers.List request = shoppingAssistant.offers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Offers offers() {
    return new Offers();
  }

  /**
   * The "offers" collection of methods.
   */
  public class Offers {

    /**
     * Create a request for the method "offers.getOffer".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link GetOffer#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetOffer getOffer(java.lang.Long id) throws java.io.IOException {
      GetOffer result = new GetOffer(id);
      initialize(result);
      return result;
    }

    public class GetOffer extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer> {

      private static final String REST_PATH = "offers/{id}";

      /**
       * Create a request for the method "offers.getOffer".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link GetOffer#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetOffer(java.lang.Long id) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetOffer setAlt(java.lang.String alt) {
        return (GetOffer) super.setAlt(alt);
      }

      @Override
      public GetOffer setFields(java.lang.String fields) {
        return (GetOffer) super.setFields(fields);
      }

      @Override
      public GetOffer setKey(java.lang.String key) {
        return (GetOffer) super.setKey(key);
      }

      @Override
      public GetOffer setOauthToken(java.lang.String oauthToken) {
        return (GetOffer) super.setOauthToken(oauthToken);
      }

      @Override
      public GetOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetOffer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetOffer setQuotaUser(java.lang.String quotaUser) {
        return (GetOffer) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetOffer setUserIp(java.lang.String userIp) {
        return (GetOffer) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public GetOffer setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public GetOffer set(String parameterName, Object value) {
        return (GetOffer) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "offers.insertOffer".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link InsertOffer#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer}
     * @return the request
     */
    public InsertOffer insertOffer(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer content) throws java.io.IOException {
      InsertOffer result = new InsertOffer(content);
      initialize(result);
      return result;
    }

    public class InsertOffer extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer> {

      private static final String REST_PATH = "offers";

      /**
       * Create a request for the method "offers.insertOffer".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link InsertOffer#execute()} method to invoke the remote
       * operation. <p> {@link
       * InsertOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer}
       * @since 1.13
       */
      protected InsertOffer(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer content) {
        super(ShoppingAssistant.this, "POST", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer.class);
      }

      @Override
      public InsertOffer setAlt(java.lang.String alt) {
        return (InsertOffer) super.setAlt(alt);
      }

      @Override
      public InsertOffer setFields(java.lang.String fields) {
        return (InsertOffer) super.setFields(fields);
      }

      @Override
      public InsertOffer setKey(java.lang.String key) {
        return (InsertOffer) super.setKey(key);
      }

      @Override
      public InsertOffer setOauthToken(java.lang.String oauthToken) {
        return (InsertOffer) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertOffer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertOffer setQuotaUser(java.lang.String quotaUser) {
        return (InsertOffer) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertOffer setUserIp(java.lang.String userIp) {
        return (InsertOffer) super.setUserIp(userIp);
      }

      @Override
      public InsertOffer set(String parameterName, Object value) {
        return (InsertOffer) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "offers.listOffers".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link ListOffers#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public ListOffers listOffers() throws java.io.IOException {
      ListOffers result = new ListOffers();
      initialize(result);
      return result;
    }

    public class ListOffers extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.OfferCollection> {

      private static final String REST_PATH = "offers";

      /**
       * Create a request for the method "offers.listOffers".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link ListOffers#execute()} method to invoke the remote
       * operation. <p> {@link
       * ListOffers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected ListOffers() {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.OfferCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListOffers setAlt(java.lang.String alt) {
        return (ListOffers) super.setAlt(alt);
      }

      @Override
      public ListOffers setFields(java.lang.String fields) {
        return (ListOffers) super.setFields(fields);
      }

      @Override
      public ListOffers setKey(java.lang.String key) {
        return (ListOffers) super.setKey(key);
      }

      @Override
      public ListOffers setOauthToken(java.lang.String oauthToken) {
        return (ListOffers) super.setOauthToken(oauthToken);
      }

      @Override
      public ListOffers setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListOffers) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListOffers setQuotaUser(java.lang.String quotaUser) {
        return (ListOffers) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListOffers setUserIp(java.lang.String userIp) {
        return (ListOffers) super.setUserIp(userIp);
      }

      @Override
      public ListOffers set(String parameterName, Object value) {
        return (ListOffers) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "offers.removeOffer".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link RemoveOffer#execute()} method to invoke the remote
     * operation.
     *
     * @param id
     * @return the request
     */
    public RemoveOffer removeOffer(java.lang.Long id) throws java.io.IOException {
      RemoveOffer result = new RemoveOffer(id);
      initialize(result);
      return result;
    }

    public class RemoveOffer extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "offers/{id}";

      /**
       * Create a request for the method "offers.removeOffer".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link RemoveOffer#execute()} method to invoke the remote
       * operation. <p> {@link
       * RemoveOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected RemoveOffer(java.lang.Long id) {
        super(ShoppingAssistant.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public RemoveOffer setAlt(java.lang.String alt) {
        return (RemoveOffer) super.setAlt(alt);
      }

      @Override
      public RemoveOffer setFields(java.lang.String fields) {
        return (RemoveOffer) super.setFields(fields);
      }

      @Override
      public RemoveOffer setKey(java.lang.String key) {
        return (RemoveOffer) super.setKey(key);
      }

      @Override
      public RemoveOffer setOauthToken(java.lang.String oauthToken) {
        return (RemoveOffer) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveOffer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveOffer setQuotaUser(java.lang.String quotaUser) {
        return (RemoveOffer) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveOffer setUserIp(java.lang.String userIp) {
        return (RemoveOffer) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public RemoveOffer setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public RemoveOffer set(String parameterName, Object value) {
        return (RemoveOffer) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "offers.updateOffer".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link UpdateOffer#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer}
     * @return the request
     */
    public UpdateOffer updateOffer(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer content) throws java.io.IOException {
      UpdateOffer result = new UpdateOffer(content);
      initialize(result);
      return result;
    }

    public class UpdateOffer extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer> {

      private static final String REST_PATH = "offers";

      /**
       * Create a request for the method "offers.updateOffer".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link UpdateOffer#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdateOffer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer}
       * @since 1.13
       */
      protected UpdateOffer(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer content) {
        super(ShoppingAssistant.this, "PUT", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Offer.class);
      }

      @Override
      public UpdateOffer setAlt(java.lang.String alt) {
        return (UpdateOffer) super.setAlt(alt);
      }

      @Override
      public UpdateOffer setFields(java.lang.String fields) {
        return (UpdateOffer) super.setFields(fields);
      }

      @Override
      public UpdateOffer setKey(java.lang.String key) {
        return (UpdateOffer) super.setKey(key);
      }

      @Override
      public UpdateOffer setOauthToken(java.lang.String oauthToken) {
        return (UpdateOffer) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateOffer setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateOffer) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateOffer setQuotaUser(java.lang.String quotaUser) {
        return (UpdateOffer) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateOffer setUserIp(java.lang.String userIp) {
        return (UpdateOffer) super.setUserIp(userIp);
      }

      @Override
      public UpdateOffer set(String parameterName, Object value) {
        return (UpdateOffer) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Places collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Places.List request = shoppingAssistant.places().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Places places() {
    return new Places();
  }

  /**
   * The "places" collection of methods.
   */
  public class Places {

    /**
     * Create a request for the method "places.getPlace".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link GetPlace#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetPlace getPlace(java.lang.Long id) throws java.io.IOException {
      GetPlace result = new GetPlace(id);
      initialize(result);
      return result;
    }

    public class GetPlace extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place> {

      private static final String REST_PATH = "places/{id}";

      /**
       * Create a request for the method "places.getPlace".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link GetPlace#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetPlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetPlace(java.lang.Long id) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPlace setAlt(java.lang.String alt) {
        return (GetPlace) super.setAlt(alt);
      }

      @Override
      public GetPlace setFields(java.lang.String fields) {
        return (GetPlace) super.setFields(fields);
      }

      @Override
      public GetPlace setKey(java.lang.String key) {
        return (GetPlace) super.setKey(key);
      }

      @Override
      public GetPlace setOauthToken(java.lang.String oauthToken) {
        return (GetPlace) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPlace setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPlace) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPlace setQuotaUser(java.lang.String quotaUser) {
        return (GetPlace) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPlace setUserIp(java.lang.String userIp) {
        return (GetPlace) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public GetPlace setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public GetPlace set(String parameterName, Object value) {
        return (GetPlace) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "places.getPlaces".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link GetPlaces#execute()} method to invoke the remote operation.
     *
     * @param longitude
     * @param latitude
     * @param distanceInKm
     * @param count
     * @return the request
     */
    public GetPlaces getPlaces(java.lang.String longitude, java.lang.String latitude, java.lang.Long distanceInKm, java.lang.Integer count) throws java.io.IOException {
      GetPlaces result = new GetPlaces(longitude, latitude, distanceInKm, count);
      initialize(result);
      return result;
    }

    public class GetPlaces extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.PlaceInfoCollection> {

      private static final String REST_PATH = "places/{longitude}/{latitude}/{distanceInKm}/{count}";

      /**
       * Create a request for the method "places.getPlaces".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link GetPlaces#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetPlaces#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param longitude
       * @param latitude
       * @param distanceInKm
       * @param count
       * @since 1.13
       */
      protected GetPlaces(java.lang.String longitude, java.lang.String latitude, java.lang.Long distanceInKm, java.lang.Integer count) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.PlaceInfoCollection.class);
        this.longitude = com.google.api.client.util.Preconditions.checkNotNull(longitude, "Required parameter longitude must be specified.");
        this.latitude = com.google.api.client.util.Preconditions.checkNotNull(latitude, "Required parameter latitude must be specified.");
        this.distanceInKm = com.google.api.client.util.Preconditions.checkNotNull(distanceInKm, "Required parameter distanceInKm must be specified.");
        this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPlaces setAlt(java.lang.String alt) {
        return (GetPlaces) super.setAlt(alt);
      }

      @Override
      public GetPlaces setFields(java.lang.String fields) {
        return (GetPlaces) super.setFields(fields);
      }

      @Override
      public GetPlaces setKey(java.lang.String key) {
        return (GetPlaces) super.setKey(key);
      }

      @Override
      public GetPlaces setOauthToken(java.lang.String oauthToken) {
        return (GetPlaces) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPlaces setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPlaces) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPlaces setQuotaUser(java.lang.String quotaUser) {
        return (GetPlaces) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPlaces setUserIp(java.lang.String userIp) {
        return (GetPlaces) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String longitude;

      /**

       */
      public java.lang.String getLongitude() {
        return longitude;
      }

      public GetPlaces setLongitude(java.lang.String longitude) {
        this.longitude = longitude;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String latitude;

      /**

       */
      public java.lang.String getLatitude() {
        return latitude;
      }

      public GetPlaces setLatitude(java.lang.String latitude) {
        this.latitude = latitude;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long distanceInKm;

      /**

       */
      public java.lang.Long getDistanceInKm() {
        return distanceInKm;
      }

      public GetPlaces setDistanceInKm(java.lang.Long distanceInKm) {
        this.distanceInKm = distanceInKm;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer count;

      /**

       */
      public java.lang.Integer getCount() {
        return count;
      }

      public GetPlaces setCount(java.lang.Integer count) {
        this.count = count;
        return this;
      }

      @Override
      public GetPlaces set(String parameterName, Object value) {
        return (GetPlaces) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "places.insertPlace".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link InsertPlace#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place}
     * @return the request
     */
    public InsertPlace insertPlace(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place content) throws java.io.IOException {
      InsertPlace result = new InsertPlace(content);
      initialize(result);
      return result;
    }

    public class InsertPlace extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place> {

      private static final String REST_PATH = "places";

      /**
       * Create a request for the method "places.insertPlace".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link InsertPlace#execute()} method to invoke the remote
       * operation. <p> {@link
       * InsertPlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place}
       * @since 1.13
       */
      protected InsertPlace(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place content) {
        super(ShoppingAssistant.this, "POST", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place.class);
      }

      @Override
      public InsertPlace setAlt(java.lang.String alt) {
        return (InsertPlace) super.setAlt(alt);
      }

      @Override
      public InsertPlace setFields(java.lang.String fields) {
        return (InsertPlace) super.setFields(fields);
      }

      @Override
      public InsertPlace setKey(java.lang.String key) {
        return (InsertPlace) super.setKey(key);
      }

      @Override
      public InsertPlace setOauthToken(java.lang.String oauthToken) {
        return (InsertPlace) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertPlace setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertPlace) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertPlace setQuotaUser(java.lang.String quotaUser) {
        return (InsertPlace) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertPlace setUserIp(java.lang.String userIp) {
        return (InsertPlace) super.setUserIp(userIp);
      }

      @Override
      public InsertPlace set(String parameterName, Object value) {
        return (InsertPlace) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "places.removePlace".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link RemovePlace#execute()} method to invoke the remote
     * operation.
     *
     * @param id
     * @return the request
     */
    public RemovePlace removePlace(java.lang.Long id) throws java.io.IOException {
      RemovePlace result = new RemovePlace(id);
      initialize(result);
      return result;
    }

    public class RemovePlace extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "places/{id}";

      /**
       * Create a request for the method "places.removePlace".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link RemovePlace#execute()} method to invoke the remote
       * operation. <p> {@link
       * RemovePlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected RemovePlace(java.lang.Long id) {
        super(ShoppingAssistant.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public RemovePlace setAlt(java.lang.String alt) {
        return (RemovePlace) super.setAlt(alt);
      }

      @Override
      public RemovePlace setFields(java.lang.String fields) {
        return (RemovePlace) super.setFields(fields);
      }

      @Override
      public RemovePlace setKey(java.lang.String key) {
        return (RemovePlace) super.setKey(key);
      }

      @Override
      public RemovePlace setOauthToken(java.lang.String oauthToken) {
        return (RemovePlace) super.setOauthToken(oauthToken);
      }

      @Override
      public RemovePlace setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemovePlace) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemovePlace setQuotaUser(java.lang.String quotaUser) {
        return (RemovePlace) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemovePlace setUserIp(java.lang.String userIp) {
        return (RemovePlace) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public RemovePlace setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public RemovePlace set(String parameterName, Object value) {
        return (RemovePlace) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "places.updatePlace".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link UpdatePlace#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place}
     * @return the request
     */
    public UpdatePlace updatePlace(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place content) throws java.io.IOException {
      UpdatePlace result = new UpdatePlace(content);
      initialize(result);
      return result;
    }

    public class UpdatePlace extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place> {

      private static final String REST_PATH = "places";

      /**
       * Create a request for the method "places.updatePlace".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link UpdatePlace#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdatePlace#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place}
       * @since 1.13
       */
      protected UpdatePlace(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place content) {
        super(ShoppingAssistant.this, "PUT", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Place.class);
      }

      @Override
      public UpdatePlace setAlt(java.lang.String alt) {
        return (UpdatePlace) super.setAlt(alt);
      }

      @Override
      public UpdatePlace setFields(java.lang.String fields) {
        return (UpdatePlace) super.setFields(fields);
      }

      @Override
      public UpdatePlace setKey(java.lang.String key) {
        return (UpdatePlace) super.setKey(key);
      }

      @Override
      public UpdatePlace setOauthToken(java.lang.String oauthToken) {
        return (UpdatePlace) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdatePlace setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdatePlace) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdatePlace setQuotaUser(java.lang.String quotaUser) {
        return (UpdatePlace) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdatePlace setUserIp(java.lang.String userIp) {
        return (UpdatePlace) super.setUserIp(userIp);
      }

      @Override
      public UpdatePlace set(String parameterName, Object value) {
        return (UpdatePlace) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Recommendations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Recommendations.List request = shoppingAssistant.recommendations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Recommendations recommendations() {
    return new Recommendations();
  }

  /**
   * The "recommendations" collection of methods.
   */
  public class Recommendations {

    /**
     * Create a request for the method "recommendations.insertRecommendation".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link InsertRecommendation#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation}
     * @return the request
     */
    public InsertRecommendation insertRecommendation(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation content) throws java.io.IOException {
      InsertRecommendation result = new InsertRecommendation(content);
      initialize(result);
      return result;
    }

    public class InsertRecommendation extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation> {

      private static final String REST_PATH = "recommendations";

      /**
       * Create a request for the method "recommendations.insertRecommendation".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link InsertRecommendation#execute()} method to invoke the
       * remote operation. <p> {@link InsertRecommendation#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation}
       * @since 1.13
       */
      protected InsertRecommendation(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation content) {
        super(ShoppingAssistant.this, "POST", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation.class);
      }

      @Override
      public InsertRecommendation setAlt(java.lang.String alt) {
        return (InsertRecommendation) super.setAlt(alt);
      }

      @Override
      public InsertRecommendation setFields(java.lang.String fields) {
        return (InsertRecommendation) super.setFields(fields);
      }

      @Override
      public InsertRecommendation setKey(java.lang.String key) {
        return (InsertRecommendation) super.setKey(key);
      }

      @Override
      public InsertRecommendation setOauthToken(java.lang.String oauthToken) {
        return (InsertRecommendation) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertRecommendation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertRecommendation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertRecommendation setQuotaUser(java.lang.String quotaUser) {
        return (InsertRecommendation) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertRecommendation setUserIp(java.lang.String userIp) {
        return (InsertRecommendation) super.setUserIp(userIp);
      }

      @Override
      public InsertRecommendation set(String parameterName, Object value) {
        return (InsertRecommendation) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "recommendations.listRecommendations".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link ListRecommendations#execute()} method to invoke the remote
     * operation.
     *
     * @param placeId
     * @return the request
     */
    public ListRecommendations listRecommendations(java.lang.Long placeId) throws java.io.IOException {
      ListRecommendations result = new ListRecommendations(placeId);
      initialize(result);
      return result;
    }

    public class ListRecommendations extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.RecommendationCollection> {

      private static final String REST_PATH = "recommendations/{placeId}";

      /**
       * Create a request for the method "recommendations.listRecommendations".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link ListRecommendations#execute()} method to invoke the
       * remote operation. <p> {@link ListRecommendations#initialize(com.google.api.client.googleapis.se
       * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param placeId
       * @since 1.13
       */
      protected ListRecommendations(java.lang.Long placeId) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.RecommendationCollection.class);
        this.placeId = com.google.api.client.util.Preconditions.checkNotNull(placeId, "Required parameter placeId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListRecommendations setAlt(java.lang.String alt) {
        return (ListRecommendations) super.setAlt(alt);
      }

      @Override
      public ListRecommendations setFields(java.lang.String fields) {
        return (ListRecommendations) super.setFields(fields);
      }

      @Override
      public ListRecommendations setKey(java.lang.String key) {
        return (ListRecommendations) super.setKey(key);
      }

      @Override
      public ListRecommendations setOauthToken(java.lang.String oauthToken) {
        return (ListRecommendations) super.setOauthToken(oauthToken);
      }

      @Override
      public ListRecommendations setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListRecommendations) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListRecommendations setQuotaUser(java.lang.String quotaUser) {
        return (ListRecommendations) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListRecommendations setUserIp(java.lang.String userIp) {
        return (ListRecommendations) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long placeId;

      /**

       */
      public java.lang.Long getPlaceId() {
        return placeId;
      }

      public ListRecommendations setPlaceId(java.lang.Long placeId) {
        this.placeId = placeId;
        return this;
      }

      @Override
      public ListRecommendations set(String parameterName, Object value) {
        return (ListRecommendations) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "recommendations.removeRecommendation".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link RemoveRecommendation#execute()} method to invoke the remote
     * operation.
     *
     * @param id
     * @return the request
     */
    public RemoveRecommendation removeRecommendation(java.lang.String id) throws java.io.IOException {
      RemoveRecommendation result = new RemoveRecommendation(id);
      initialize(result);
      return result;
    }

    public class RemoveRecommendation extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "recommendations/{id}";

      /**
       * Create a request for the method "recommendations.removeRecommendation".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link RemoveRecommendation#execute()} method to invoke the
       * remote operation. <p> {@link RemoveRecommendation#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected RemoveRecommendation(java.lang.String id) {
        super(ShoppingAssistant.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public RemoveRecommendation setAlt(java.lang.String alt) {
        return (RemoveRecommendation) super.setAlt(alt);
      }

      @Override
      public RemoveRecommendation setFields(java.lang.String fields) {
        return (RemoveRecommendation) super.setFields(fields);
      }

      @Override
      public RemoveRecommendation setKey(java.lang.String key) {
        return (RemoveRecommendation) super.setKey(key);
      }

      @Override
      public RemoveRecommendation setOauthToken(java.lang.String oauthToken) {
        return (RemoveRecommendation) super.setOauthToken(oauthToken);
      }

      @Override
      public RemoveRecommendation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RemoveRecommendation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RemoveRecommendation setQuotaUser(java.lang.String quotaUser) {
        return (RemoveRecommendation) super.setQuotaUser(quotaUser);
      }

      @Override
      public RemoveRecommendation setUserIp(java.lang.String userIp) {
        return (RemoveRecommendation) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public RemoveRecommendation setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public RemoveRecommendation set(String parameterName, Object value) {
        return (RemoveRecommendation) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "recommendations.updateRecommendation".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link UpdateRecommendation#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation}
     * @return the request
     */
    public UpdateRecommendation updateRecommendation(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation content) throws java.io.IOException {
      UpdateRecommendation result = new UpdateRecommendation(content);
      initialize(result);
      return result;
    }

    public class UpdateRecommendation extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation> {

      private static final String REST_PATH = "recommendations";

      /**
       * Create a request for the method "recommendations.updateRecommendation".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link UpdateRecommendation#execute()} method to invoke the
       * remote operation. <p> {@link UpdateRecommendation#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation}
       * @since 1.13
       */
      protected UpdateRecommendation(com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation content) {
        super(ShoppingAssistant.this, "PUT", REST_PATH, content, com.google.sample.mobileassistantbackend.shoppingAssistant.model.Recommendation.class);
      }

      @Override
      public UpdateRecommendation setAlt(java.lang.String alt) {
        return (UpdateRecommendation) super.setAlt(alt);
      }

      @Override
      public UpdateRecommendation setFields(java.lang.String fields) {
        return (UpdateRecommendation) super.setFields(fields);
      }

      @Override
      public UpdateRecommendation setKey(java.lang.String key) {
        return (UpdateRecommendation) super.setKey(key);
      }

      @Override
      public UpdateRecommendation setOauthToken(java.lang.String oauthToken) {
        return (UpdateRecommendation) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateRecommendation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateRecommendation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateRecommendation setQuotaUser(java.lang.String quotaUser) {
        return (UpdateRecommendation) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateRecommendation setUserIp(java.lang.String userIp) {
        return (UpdateRecommendation) super.setUserIp(userIp);
      }

      @Override
      public UpdateRecommendation set(String parameterName, Object value) {
        return (UpdateRecommendation) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Registrations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingAssistant shoppingAssistant = new ShoppingAssistant(...);}
   *   {@code ShoppingAssistant.Registrations.List request = shoppingAssistant.registrations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Registrations registrations() {
    return new Registrations();
  }

  /**
   * The "registrations" collection of methods.
   */
  public class Registrations {

    /**
     * Create a request for the method "registrations.listDevices".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link ListDevices#execute()} method to invoke the remote
     * operation.
     *
     * @param count
     * @return the request
     */
    public ListDevices listDevices(java.lang.Integer count) throws java.io.IOException {
      ListDevices result = new ListDevices(count);
      initialize(result);
      return result;
    }

    public class ListDevices extends ShoppingAssistantRequest<com.google.sample.mobileassistantbackend.shoppingAssistant.model.CollectionResponseRegistration> {

      private static final String REST_PATH = "registrations/{count}";

      /**
       * Create a request for the method "registrations.listDevices".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link ListDevices#execute()} method to invoke the remote
       * operation. <p> {@link
       * ListDevices#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param count
       * @since 1.13
       */
      protected ListDevices(java.lang.Integer count) {
        super(ShoppingAssistant.this, "GET", REST_PATH, null, com.google.sample.mobileassistantbackend.shoppingAssistant.model.CollectionResponseRegistration.class);
        this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public ListDevices setAlt(java.lang.String alt) {
        return (ListDevices) super.setAlt(alt);
      }

      @Override
      public ListDevices setFields(java.lang.String fields) {
        return (ListDevices) super.setFields(fields);
      }

      @Override
      public ListDevices setKey(java.lang.String key) {
        return (ListDevices) super.setKey(key);
      }

      @Override
      public ListDevices setOauthToken(java.lang.String oauthToken) {
        return (ListDevices) super.setOauthToken(oauthToken);
      }

      @Override
      public ListDevices setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListDevices) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListDevices setQuotaUser(java.lang.String quotaUser) {
        return (ListDevices) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListDevices setUserIp(java.lang.String userIp) {
        return (ListDevices) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer count;

      /**

       */
      public java.lang.Integer getCount() {
        return count;
      }

      public ListDevices setCount(java.lang.Integer count) {
        this.count = count;
        return this;
      }

      @Override
      public ListDevices set(String parameterName, Object value) {
        return (ListDevices) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "registrations.registerDevice".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link RegisterDevice#execute()} method to invoke the remote
     * operation.
     *
     * @param regId
     * @return the request
     */
    public RegisterDevice registerDevice(java.lang.String regId) throws java.io.IOException {
      RegisterDevice result = new RegisterDevice(regId);
      initialize(result);
      return result;
    }

    public class RegisterDevice extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "registrations/{regId}";

      /**
       * Create a request for the method "registrations.registerDevice".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link RegisterDevice#execute()} method to invoke the remote
       * operation. <p> {@link RegisterDevice#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param regId
       * @since 1.13
       */
      protected RegisterDevice(java.lang.String regId) {
        super(ShoppingAssistant.this, "POST", REST_PATH, null, Void.class);
        this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
      }

      @Override
      public RegisterDevice setAlt(java.lang.String alt) {
        return (RegisterDevice) super.setAlt(alt);
      }

      @Override
      public RegisterDevice setFields(java.lang.String fields) {
        return (RegisterDevice) super.setFields(fields);
      }

      @Override
      public RegisterDevice setKey(java.lang.String key) {
        return (RegisterDevice) super.setKey(key);
      }

      @Override
      public RegisterDevice setOauthToken(java.lang.String oauthToken) {
        return (RegisterDevice) super.setOauthToken(oauthToken);
      }

      @Override
      public RegisterDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RegisterDevice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RegisterDevice setQuotaUser(java.lang.String quotaUser) {
        return (RegisterDevice) super.setQuotaUser(quotaUser);
      }

      @Override
      public RegisterDevice setUserIp(java.lang.String userIp) {
        return (RegisterDevice) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String regId;

      /**

       */
      public java.lang.String getRegId() {
        return regId;
      }

      public RegisterDevice setRegId(java.lang.String regId) {
        this.regId = regId;
        return this;
      }

      @Override
      public RegisterDevice set(String parameterName, Object value) {
        return (RegisterDevice) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "registrations.unregisterDevice".
     *
     * This request holds the parameters needed by the shoppingAssistant server.  After setting any
     * optional parameters, call the {@link UnregisterDevice#execute()} method to invoke the remote
     * operation.
     *
     * @param regId
     * @return the request
     */
    public UnregisterDevice unregisterDevice(java.lang.String regId) throws java.io.IOException {
      UnregisterDevice result = new UnregisterDevice(regId);
      initialize(result);
      return result;
    }

    public class UnregisterDevice extends ShoppingAssistantRequest<Void> {

      private static final String REST_PATH = "registrations/{regId}";

      /**
       * Create a request for the method "registrations.unregisterDevice".
       *
       * This request holds the parameters needed by the the shoppingAssistant server.  After setting
       * any optional parameters, call the {@link UnregisterDevice#execute()} method to invoke the
       * remote operation. <p> {@link UnregisterDevice#initialize(com.google.api.client.googleapis.servi
       * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param regId
       * @since 1.13
       */
      protected UnregisterDevice(java.lang.String regId) {
        super(ShoppingAssistant.this, "DELETE", REST_PATH, null, Void.class);
        this.regId = com.google.api.client.util.Preconditions.checkNotNull(regId, "Required parameter regId must be specified.");
      }

      @Override
      public UnregisterDevice setAlt(java.lang.String alt) {
        return (UnregisterDevice) super.setAlt(alt);
      }

      @Override
      public UnregisterDevice setFields(java.lang.String fields) {
        return (UnregisterDevice) super.setFields(fields);
      }

      @Override
      public UnregisterDevice setKey(java.lang.String key) {
        return (UnregisterDevice) super.setKey(key);
      }

      @Override
      public UnregisterDevice setOauthToken(java.lang.String oauthToken) {
        return (UnregisterDevice) super.setOauthToken(oauthToken);
      }

      @Override
      public UnregisterDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UnregisterDevice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UnregisterDevice setQuotaUser(java.lang.String quotaUser) {
        return (UnregisterDevice) super.setQuotaUser(quotaUser);
      }

      @Override
      public UnregisterDevice setUserIp(java.lang.String userIp) {
        return (UnregisterDevice) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String regId;

      /**

       */
      public java.lang.String getRegId() {
        return regId;
      }

      public UnregisterDevice setRegId(java.lang.String regId) {
        this.regId = regId;
        return this;
      }

      @Override
      public UnregisterDevice set(String parameterName, Object value) {
        return (UnregisterDevice) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link ShoppingAssistant}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ShoppingAssistant}. */
    @Override
    public ShoppingAssistant build() {
      return new ShoppingAssistant(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ShoppingAssistantRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setShoppingAssistantRequestInitializer(
        ShoppingAssistantRequestInitializer shoppingassistantRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(shoppingassistantRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
